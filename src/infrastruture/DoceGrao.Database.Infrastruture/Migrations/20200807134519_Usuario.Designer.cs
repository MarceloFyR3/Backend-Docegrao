// <auto-generated />
using System;
using DoceGrao.Database.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoceGrao.Database.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200807134519_Usuario")]
    partial class Usuario
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoceGrao.Api.Domain.Models.User.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("Block")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("DateBlock")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateRegister")
                        .HasColumnType("datetime");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int");

                    b.Property<int?>("IncorrectAttempts")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .IsUnicode(false);

                    b.Property<byte[]>("SaltKey")
                        .IsRequired()
                        .HasColumnName("SaltKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UrlImg")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DoceGrao.Api.Domain.Models.User.UserModel", b =>
                {
                    b.OwnsOne("DoceGrao.Api.Domain.Models.ValueObjects.Credential", "Credential", b1 =>
                        {
                            b1.Property<Guid>("UserModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Login")
                                .IsRequired()
                                .HasColumnName("Login")
                                .HasColumnType("varchar(30)")
                                .IsUnicode(false);

                            b1.Property<string>("Password")
                                .IsRequired()
                                .HasColumnName("Password")
                                .HasColumnType("varchar(255)");

                            b1.HasKey("UserModelId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UserModelId");
                        });

                    b.OwnsOne("DoceGrao.Api.Domain.Models.ValueObjects.Document", "Document", b1 =>
                        {
                            b1.Property<Guid>("UserModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("DateIssue")
                                .HasColumnName("DocumentoDateIssue")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnName("CPFCNPJ")
                                .HasColumnType("varchar(14)");

                            b1.Property<int>("Type")
                                .HasColumnName("DocumentType")
                                .HasColumnType("int");

                            b1.HasKey("UserModelId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UserModelId");
                        });

                    b.OwnsOne("DoceGrao.Api.Domain.Models.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserModelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(150)");

                            b1.HasKey("UserModelId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UserModelId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
